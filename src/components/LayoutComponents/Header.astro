---
import Navigation from "@components/LayoutComponents/Navigation.astro";
import Hamburger from "@components/LayoutComponents/Hamburger.astro";
import ThemeIconAndToggle from "@components/LayoutComponents/ThemeIconAndToggle.astro";
const { activeLink } = Astro.props;
---

<nav id="mainNav">
  <span class="hamburger">
    <Hamburger />
  </span>
  <Navigation activeLink={activeLink} />
  <span class="icon-container">
    <ThemeIconAndToggle />
  </span>
</nav>

<script>
  document.querySelector(".hamburger")?.addEventListener("click", () => {
    document.querySelector(".nav-links")?.classList.toggle("expanded");
    document.querySelector(".icon-container")?.classList.toggle("expanded");
  });
  let lastScrollTop = 0;
  const navBar = document.getElementById("mainNav");

  const throttle = (func: (...args: any[]) => void, limit: number) => {
    let lastFunc: number | undefined;
    let lastRan: number | undefined;
    return function (this: any, ...args: any[]): void {
      const context = this;
      if (!lastRan) {
        func.apply(context, args);
        lastRan = Date.now();
      } else {
        clearTimeout(lastFunc);
        lastFunc = window.setTimeout(
          () => {
            if (Date.now() - (lastRan as number) >= limit) {
              func.apply(context, args);
              lastRan = Date.now();
            }
          },
          limit - ((Date.now() - lastRan) as number),
        );
      }
    };
  };

  const handleScroll = () => {
    let currentScroll = window.scrollY || document.documentElement.scrollTop;
    if (currentScroll > lastScrollTop) {
      navBar?.classList.add("hidden");
    } else {
      navBar?.classList.remove("hidden");
    }
    lastScrollTop = currentScroll <= 0 ? 0 : currentScroll;
  };

  window.addEventListener("scroll", throttle(handleScroll, 150));
</script>

<style>
  .expanded {
    display: none;
  }

  nav {
    top: 0;
    width: 100%;
    height: 71px;
    background-color: none;
    position: sticky;
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 400;
    opacity: 1;
    transition:
      transform 0.45s var(--improved-ease),
      opacity 0.25s var(--improved-ease);
  }

  .hidden {
    transform: translateY(-100%);
    opacity: 0;
  }

  @media (prefers-reduced-motion: reduce) {
    .hidden: {
      transform: none;
    }

    .postContainer {
      transition: none;
    }

    .postContainer:hover {
      scale: none;
      transition: all 0.25s var(--improved-ease);
      animation: none;
    }

    .postContainer:active {
      scale: none;
    }
  }

  @media screen and (min-width: 687px) {
    nav {
      height: 90px;
      max-width: 750px;
      z-index: 100;
      justify-content: unset;
      position: sticky;
      background-image: url('/noise.svg');
    }

    html.dark nav {
      background-image: url('/dnoise.svg');
    }
  }
</style>
