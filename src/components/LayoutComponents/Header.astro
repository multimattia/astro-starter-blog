---
import Navigation from "@components/LayoutComponents/Navigation.astro";
import Hamburger from "@components/LayoutComponents/Hamburger.astro";
import ThemeIconAndToggle from "@components/LayoutComponents/ThemeIconAndToggle.astro";
const { activeLink } = Astro.props;
---

<nav id="mainNav">
  <div class="wrapper">
    <span class="hamburger">
      <Hamburger />
    </span>
    <Navigation activeLink={activeLink} />
    <span class="icon-container">
      <ThemeIconAndToggle />
    </span>
  </div>
</nav>

<script>
  document.addEventListener("astro:page-load", () => {
    document.querySelector(".hamburger")?.addEventListener("click", () => {
      document.querySelector(".nav-links")?.classList.toggle("expanded");
    });
  });
</script>

<script data-astro-rerun>
  const throttle = (func, limit) => {
    let lastFunc;
    let lastRan;
    return function () {
      const context = this;
      const args = arguments;
      if (!lastRan) {
        func.apply(context, args);
        lastRan = Date.now();
      } else {
        clearTimeout(lastFunc);
        lastFunc = window.setTimeout(
          () => {
            if (Date.now() - lastRan >= limit) {
              func.apply(context, args);
              lastRan = Date.now();
            }
          },
          limit - (Date.now() - lastRan),
        );
      }
    };
  };

  const handleScroll = function () {
    const currentTime = Date.now();
    const currentScroll = window.scrollY || document.documentElement.scrollTop;
    const scrollDifference = this.lastScrollTop - currentScroll;
    const timeDifference = currentTime - this.lastScrollTime;

    const scrollSpeed = Math.abs(scrollDifference / timeDifference);

    const scrollSpeedThreshold = 0.05; // pixels per millisecond

    if (currentScroll > this.lastScrollTop) {
      this.navBar?.classList.add("hidden");
    } else if (scrollSpeed > scrollSpeedThreshold) {
      this.navBar?.classList.remove("hidden");
    }

    this.lastScrollTop = Math.max(0, currentScroll);
    this.lastScrollTime = currentTime;
  };

  document.addEventListener("astro:page-load", () => {
    const boundHandleScroll = handleScroll.bind({
      navBar: document.getElementById("mainNav"),
      lastScrollTop: 0,
      lastScrollTime: Date.now(),
    });
    window.addEventListener("scroll", throttle(boundHandleScroll, 150));
  });
</script>

<style>
  .expanded {
    display: none;
  }

  nav {
    top: 0;
    width: 100%;
    height: 71px;
    background-color: var(--color-light-bg);
    box-shadow: var(--shadow-elevation-medium);
    position: sticky;
    display: flex;
    justify-content: space-between;
    align-items: center;
    z-index: 400;
    opacity: 1;
    transition:
      transform 0.45s var(--improved-ease),
      opacity 0.25s var(--improved-ease);
  }

  .wrapper {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-grow: 1;
  }

  html.dark nav {
    background-color: var(--color-night-bg);
    box-shadow: var(--shadow-elevation-high-night);
  }

  .hidden {
    transform: translateY(-100%);
    opacity: 0;
  }

  @media (prefers-reduced-motion: reduce) {
    .hidden {
      transform: none;
    }

    .postContainer {
      transition: none;
    }

    .postContainer:hover {
      scale: none;
      transition: all 0.25s var(--improved-ease);
      animation: none;
    }

    .postContainer:active {
      scale: none;
    }
  }

  @media screen and (min-width: 687px) {
    .wrapper {
      width: 90%;
      height: 90px;
      max-width: 770px;
      position: sticky;
      justify-content: unset;
    }
    nav {
      z-index: 100;
      background-color: var(--color-light-bg);
      box-shadow: none;
    }

    html.dark nav {
      background-color: var(--color-night-bg);
      box-shadow: none;
    }
  }
</style>
